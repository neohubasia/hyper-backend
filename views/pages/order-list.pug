extends ../includes/layout-main
block content
  main.ml-sm-auto.px-md-4(role='main')

    include ./../includes/layout-list-header

    table#example.table(style='width:100%')
      thead
        tr
          th #
          th OrderCode
          th Customer
          th Email
          th Status
          th Updated Time
          th
            span.float-right Actions
      tbody#tbl
  script.
    $(document).ready(function() {
      var token = '!{token}';
      $("#alert").hide();
      $.fn.dataTable.ext.errMode = 'none';
      $.fn.dataTable.ext.classes.sPageButton = 'btn btn-sm btn-secondary m-1'; 
      var table = $('#example').on('error.dt', function(e, settings, techNote, message) {
          console.log('DataTable Error: ', message);
          alert('Read data is failed!');
        }).DataTable({
          "autoWidth": true,
          "pagingType": "full_numbers",
          "language": {
            "searchPlaceholder": "Search",
            "paginate": {
              "previous": "<",
              "next": ">"
            }
          },
          "ajax": {
            "url": "./api" + '!{page.list.url}',
            "headers": {"authorization": "Bearer " + token},
          },
          "columns": [
            { "data": "id"},
            { "data": "orderNumber"},
            { "data": "customerId.displayName" },
            { "data": "customerId.email" },
<<<<<<< HEAD
            { "data": "status",render:function (d, type, row, meta) {
              return `<select class="form-select" style="width:150px" id="status" aria-label="Default select example">
                      <option value="pending"
                         ${
                            row.status == 'confirmed' ? 'disabled' : row.status == 'cancelled' ? 'disabled':
                            row.status == 'awaiting_picked' ? 'disabled': row.status == 'picked' ? 'disabled':
                            row.status == 'completed' ? 'disabled': ''
                           }
                         ${row.status == 'pending' ? 'selected' : ''}>Pending</option>
                      <option value="confirmed"
                        ${
                          row.status == 'cancelled' ? 'disabled':
                          row.status == 'awaiting_picked' ? 'disabled': row.status == 'picked' ? 'disabled':
                          row.status == 'completed' ? 'disabled': ''
                         }
                         ${row.status == 'confirmed' ? 'selected' : ''}>Confirmed</option>
                      <option value="cancelled"
                        ${
                          row.status == 'awaiting_picked' ? 'disabled': row.status == 'picked' ? 'disabled':
                          row.status == 'completed' ? 'disabled': ''
                         }
                         ${row.status == 'cancelled' ? 'selected' : ''}>Cancelled</option>
                      ${row.status == 'cancelled' ? '':
                      `<option value="awaiting_picked"
                        ${
                          row.status == 'picked' ? 'disabled':
                          row.status == 'completed' ? 'disabled': ''
                        }
                        ${row.status == 'awaiting_picked' ? 'selected' : ''}>Awaiting Picked</option>
                      <option value="picked"
                        ${
                          row.status == 'completed' ? 'disabled': ''
                        }
                         ${row.status == 'picked' ? 'selected' : ''}>Picked</option>
=======
            { "data": "status", render: function (d, type, row, meta) {
                  
              return `<select class="form-select" id="status" aria-label="Default select example">
                      <option value="pending" ${row.status == 'pending' ? 'selected' : ''}>Pending</option>
                      <option value="confirmed" ${row.status == 'confirmed' ? 'selected' : ''}>Confirmed</option>
                      <option value="cancelled" ${row.status == 'cancelled' ? 'selected' : ''}>Cancelled</option>
                      ${row.status == 'confirmed' ? 
                      `<option value="awaiting_picked" ${row.status == 'awaiting_picked' ? 'selected' : ''}>Awaiting Picked</option>
                      <option value="picked" ${row.status == 'picked' ? 'selected' : ''}>Picked</option>
>>>>>>> 52154a8f32dd5c8f835c937dac067f18ce67e608
                      <option value="completed" ${row.status == 'completed' ? 'selected' : ''}>Completed</option>`
                       }
                  </select>`
                }
            },
            { "data": "updated_at" },
            { "data": "actions" },
          ],
          "columnDefs": [
            { targets: 0, render: dataTableIndexRenderer() },
            { targets: 5, render: dataTableDateTimeRenderer() },
            { targets: 6, orderable: false, render: dataTableDetailActionsRenderer(
                ".!{page.entry.url}", "!{page.actions}", 
                { detail: "!{app.icons.FLAT_DETAIL}" }
              )
            }
          ]
      });
      // processing with status
      $('#example tbody').on('change', '#status', function () {
          var row = table.row($(this).parents('tr')).data();
          var data = {};
          
          data.id = row.id
          data.status = $(this).val();
<<<<<<< HEAD
          data.id=row.id
          var option_id=$(this).children(":selected").attr("id")
          //- for(var i=1;i<option_id;i++){
            //- $('#'+1).attr('datamin','1000')
          //- }
          //- alert(data.status + ">>" + row.id);
=======
  
>>>>>>> 52154a8f32dd5c8f835c937dac067f18ce67e608
          $.ajax({
            type: 'POST',
            headers: {"authorization": "Bearer " + token},
            url: './api/order/status',
            data: JSON.parse(JSON.stringify(data)),
            success: function(data){
              if(data.status.toLowerCase() == "success")
              { 
                $("#alertTitle").html("Success: ");
                $("#alertMessage").html("Save Successful.");
                $("#alert").addClass("alert-success").show();
              }
              else{
                $("#alertTitle").html("Error: ");
                $("#alertMessage").html("Error on save.");
                $("#alert").addClass("alert-danger").show();
              }
              setTimeout(function() { $("#alert").hide() }, 2000);
              table.ajax.reload();
            }
          });
      });

      $('#dialogDeleteConfirm').on('show.bs.modal', function (event) {
        var button = $(event.relatedTarget);
        var id = button.data('id');
        $(this).attr('data-id', id);
        $(this).find('#dialogAccept').on('click', function(ev) {
          var deleteUrl = './api' + "!{page.entry.url}/" + id;
          handleDelete(deleteUrl, token, function() {
            $('#example').DataTable().ajax.reload()
          });
        });
      }).on('hide.bs.modal', function (event) {
        $(this).attr('data-id', '');
        $(this).find('#dialogAccept').off('click');
      });
    });